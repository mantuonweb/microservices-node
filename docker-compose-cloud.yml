services:
  consul:
    image: hashicorp/consul:latest
    container_name: ms-consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8500/v1/status/leader"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservice-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: ms-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
    networks:
      - microservice-network

  mongodb:
    image: mongo:latest
    container_name: ms-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - microservice-network

  config-service:
    image: mantuonweb/config-service:latest
    container_name: ms-config-service
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=dev
      - RABBITMQ_URL=amqp://guest:guest@ms-rabbitmq:5672
      - ZIPKIN_URL=http://ms-zipkin:9411
      - LOKI_URL=http://ms-loki:3100
    restart: always
    depends_on:
      consul:
        condition: service_healthy
      zipkin:
        condition: service_healthy
      loki:
        condition: service_started
      grafana:
        condition: service_started
    networks:
      - microservice-network

  product-service:
    image: mantuonweb/product-service:latest
    container_name: ms-product-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=dev
      - CONFIG_SERVER_URL=http://ms-config-service:4000
      - RABBITMQ_URL=amqp://guest:guest@ms-rabbitmq:5672
      - ZIPKIN_URL=http://ms-zipkin:9411
      - LOKI_URL=http://ms-loki:3100
    restart: always
    depends_on:
      consul:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      config-service:
        condition: service_started
      zipkin:
        condition: service_healthy
      loki:
        condition: service_started
      grafana:
        condition: service_started
    networks:
      - microservice-network

  order-service:
    image: mantuonweb/order-service:latest
    container_name: ms-order-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=dev
      - CONFIG_SERVER_URL=http://ms-config-service:4000
      - ZIPKIN_URL=http://ms-zipkin:9411
      - LOKI_URL=http://ms-loki:3100
    restart: always
    depends_on:
      consul:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      config-service:
        condition: service_started
      zipkin:
        condition: service_healthy
      loki:
        condition: service_started
      grafana:
        condition: service_started
    networks:
      - microservice-network
  
  customer-service:
    image: mantuonweb/customer-service:latest
    container_name: ms-customer-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=dev
      - CONFIG_SERVER_URL=http://ms-config-service:4000
      - ZIPKIN_URL=http://ms-zipkin:9411
      - LOKI_URL=http://ms-loki:3100
    restart: always
    depends_on:
      consul:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      config-service:
        condition: service_started
      zipkin:
        condition: service_healthy
      loki:
        condition: service_started
      grafana:
        condition: service_started
    networks:
      - microservice-network
  
  payment-service:
    image: mantuonweb/payment-service:latest
    container_name: ms-payment-service
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=dev
      - CONFIG_SERVER_URL=http://ms-config-service:4000
      - ZIPKIN_URL=http://ms-zipkin:9411
      - LOKI_URL=http://ms-loki:3100
    restart: always
    depends_on:
      consul:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      config-service:
        condition: service_started
      zipkin:
        condition: service_healthy
      loki:
        condition: service_started
      grafana:
        condition: service_started
    networks:
      - microservice-network

  inventory-service:
    image: mantuonweb/inventory-service:latest
    container_name: ms-inventory-service
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=dev
      - CONFIG_SERVER_URL=http://ms-config-service:4000
      - ZIPKIN_URL=http://ms-zipkin:9411
      - LOKI_URL=http://ms-loki:3100
    restart: always
    depends_on:
      consul:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      config-service:
        condition: service_started
      zipkin:
        condition: service_healthy
      loki:
        condition: service_started
      grafana:
        condition: service_started
    networks:
      - microservice-network

  auth-service:
    image: mantuonweb/auth-service:latest
    container_name: ms-auth-service
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=dev
      - CONFIG_SERVER_URL=http://ms-config-service:4000
      - ZIPKIN_URL=http://ms-zipkin:9411
      - LOKI_URL=http://ms-loki:3100
    restart: always
    depends_on:
      consul:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      config-service:
        condition: service_started
      zipkin:
        condition: service_healthy
      loki:
        condition: service_started
      grafana:
        condition: service_started
    networks:
      - microservice-network

  notification-service:
    image: mantuonweb/notification-service:latest
    container_name: ms-notification-service
    ports:
      - "3030:3030"
    environment:
      - NODE_ENV=dev
      - RABBITMQ_URL=amqp://guest:guest@ms-rabbitmq:5672
      - ZIPKIN_URL=http://ms-zipkin:9411
      - LOKI_URL=http://ms-loki:3100
    restart: always
    depends_on:
      consul:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      config-service:
        condition: service_started
      zipkin:
        condition: service_healthy
      loki:
        condition: service_started
      grafana:
        condition: service_started
    networks:
      - microservice-network

  query-service:
    image: mantuonweb/query-service:latest
    container_name: ms-query-service
    ports:
      - "3032:3032"
    environment:
      - NODE_ENV=dev
      - RABBITMQ_URL=amqp://guest:guest@ms-rabbitmq:5672
      - ZIPKIN_URL=http://ms-zipkin:9411
      - LOKI_URL=http://ms-loki:3100
    restart: always
    depends_on:
      consul:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      config-service:
        condition: service_started
      payment-service:
        condition: service_started
      inventory-service:
        condition: service_started
      order-service:
        condition: service_started
      product-service:
        condition: service_started
      notification-service:
        condition: service_started
      zipkin:
        condition: service_healthy
      loki:
        condition: service_started
      grafana:
        condition: service_started
    networks:
      - microservice-network

  ms-frontend:
    image: mantuonweb/ms-frontend:latest
    container_name: ms-frontend
    ports:
      - "8000:80"
    restart: unless-stopped
    networks:
      - microservice-network
  
  redis:
    image: redis:latest
    container_name: ms-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - microservice-network

  loki:
    image: grafana/loki:latest
    container_name: ms-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - microservice-network

  grafana:
    image: grafana/grafana:latest
    container_name: ms-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - microservice-network
    depends_on:
      - loki
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:3000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  
  api-gateway:
    image: mantuonweb/api-gateway:latest
    container_name: ms-gateway-service
    ports:
      - "9000:9000"
    environment:
      - NODE_ENV=development
      - ZIPKIN_URL=http://ms-zipkin:9411
      - LOKI_URL=http://ms-loki:3100
    restart: unless-stopped
    depends_on:
      - config-service
      - product-service
      - order-service
      - customer-service
      - inventory-service
      - notification-service
      - zipkin
      - loki
      - grafana
    networks:
      - microservice-network

  zipkin:
    image: openzipkin/zipkin:latest
    container_name: ms-zipkin
    ports:
      - "9411:9411"
    environment:
      - STORAGE_TYPE=mem
    restart: unless-stopped
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9411/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  mongodb_data:
  rabbitmq_data:
  rabbitmq_logs:
  grafana-storage:
  redis_data:
  loki_data:

networks:
  microservice-network:
    driver: bridge
